version: "3"

services:
  reverse-proxy:
    image: nginx:latest
    ports:
      - 8080:80
      - 443:443
    restart: always
    volumes:
      - ./nginx/conf/:/etc/nginx/conf.d/:ro
      - ./nginx/:/etc/nginx/ssl/:ro

  time-series-react:
    container_name: time-series-react
    build:
      context: .
      dockerfile: ./apps/time-series/Dockerfile
    # ports:
    #   - 3200:3000
    working_dir: /app/apps/time-series
    entrypoint: ["yarn", "dev"]
    volumes: #these volumes enable hot reload for file changes
      #- ./apps/time-series/src:/app/apps/time-series/src #source code for current project
      - ./apps/time-series:/app/apps/time-series #all code for current project
      - ./packages:/app/packages #shared turborepo packages
    tty: true

  time-series-api:
    container_name: time-series-api
    build:
      context: .
      dockerfile: ./time-series-api/Dockerfile
    # image: fastapi_v4
    environment:
      - CONTAINER_PATH=/app
    depends_on:
      time-series-db:
        condition: service_healthy
    # ports:
    #   - 8000:8000
    volumes:
      - ./time-series-api:/app
      - ./python-modules:/app/python-modules

  time-series-db:
    container_name: time-series-db
    image: postgres
    environment:
      - POSTGRES_USER=postgres
      - PGUSER=postgres
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=async_postgres
    command: postgres -c 'max_connections=200'
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      interval: 1s
      timeout: 5s
      retries: 10
    volumes:
      - ./time-series-db/db:/var/lib/postgresql/data
      # Run a command after the container starts to create the test database
      - ./scripts/create_test_db.sh:/docker-entrypoint-initdb.d/create_test_db.sh
    restart: always

  pgadmin:
    container_name: pgadmin
    image: dpage/pgadmin4:latest
    environment:
      - PGADMIN_DEFAULT_EMAIL=user@domain.com
      - PGADMIN_DEFAULT_PASSWORD=password
    # ports:
    #   - "5032:80"
    restart: always

  obsidian:
    image: lscr.io/linuxserver/obsidian:latest
    container_name: obsidian
    # security_opt:
    #   - seccomp:unconfined #optional
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Etc/UTC
      - SUBFOLDER=/obsidian/
      - DOCKER_MODS=linuxserver/mods:universal-git
    volumes:
      - ./obsidian/config:/config
      - ./obsidian/vaults:/vaults
    # ports:
    #   - 3000:3000
    #   - 3001:3001
    # devices:
    #   - /dev/dri:/dev/dri #optional
    shm_size: "1gb"
    restart: unless-stopped

  chatbot-api:
    build:
      context: .
      dockerfile: ./chatbot-api/Dockerfile
    container_name: chatbot-api
    volumes:
      - ./chatbot-api:/app
      - ./python-modules:/app/python-modules
      - ./rag_vector_db.sqlite:/app/rag_vector_db.sqlite # Mount the SQLite DB for persistence